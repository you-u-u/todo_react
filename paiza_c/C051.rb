=begin
この遊びでは 1 から 9 までの数字のカードのみを 4 枚使用します。
ただし、この 4 枚の中で同じ数値のカードが重複する事もあります。
ルールは以下の通りです。

4 枚のカードを横に並べます。
左から 2 枚のカード、右から 2 枚のカードをそれぞれ 2 ケタの整数とみなし、和を計算します。
あらゆる並べ方を試し、和の最大値（最大スコア）を求めます。

カード 4 枚に書かれた数が与えられるので、最大スコアを出力してください。rubyで
入力例 1 の 2, 9, 3, 8 の 4 枚を使う場合、以下の 12 通りの和の最大値 175 が最大スコアとなります。

カードの 4 枚の並べ方は 4! = 24 通り存在しますが、足し算は順序に依存しないため、12 通りのみ考慮すればよいことに注意してください。
たとえば、9, 2, 3, 8 の順で並べた場合のスコアは 92 + 38 = 130 となります。
入力される値
入力は以下のフォーマットで与えられます。

a b c d
・a, b, c, d はそれぞれ 4 枚のカードに書かれた数を表し、半角スペース区切りで与えられます。
・入力は 1 行となり、入力値最終行の末尾に改行が 1 つ入ります。

それぞれの値は文字列で標準入力から渡されます。標準入力からの値取得方法はこちらをご確認ください
期待する出力
与えられたカードについて、最大スコアを出力してください。

出力の最後に改行を入れ、余計な文字、空行を含んではいけません。
=end


n = gets.split.map(&:to_s)
max_sum = 0

# すべての並べ替えを試す
n.permutation(4).each do |perm|
  a = perm[0] + perm[1]  # 左側の2枚
  b = perm[2] + perm[3]  # 右側の2枚
  sum = a.to_i + b.to_i  # その和を計算

  # 最大値を更新
  max_sum = sum if sum > max_sum
end

puts max_sum



n = gets.split.map(&:to_s)
n.sort!

a = n[3]+n[1]
b = n[2]+n[0]
puts a.to_i + b.to_i
  